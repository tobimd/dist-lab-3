#!/bin/sh

mode=$1
shift >/dev/null 2>&1

if [[ $mode == "build" || $mode == "b" ]]; then
    echo -e "running the following command:\n\t$ go build -o ./squid-bin -v -ldflags '-extldflags \"-static\"' -v ./*.go "
    go build -o ./squid-bin -v -ldflags '-extldflags "-static"' -v ./*.go

elif [[ $mode == "docker" || $mode == "d" ]]; then
    echo -e 'running the following command:\n\t$ podman build -t squid-game .\n'
    podman build -t squid-game .

elif [[ $mode == "pull" || $mode == "p" ]]; then
    echo -e "running the following command:\
\t$ podman run -it --rm --name squid-game squid-game -c \"sleep 9\" >/dev/null 2>&1\
\t$ podman cp squid-game:/go/src/lab-2-squid-game/squid-bin ./"

    $(podman run -it --rm --name squid-game squid-game -c "sleep 9" >/dev/null 2>&1 &)
    $(podman run -it --rm --name squid-game squid-game -c "sleep 9" >/dev/null 2>&1 &)
    podman cp squid-game:/go/src/lab-2-squid-game/squid-bin ./

elif [[ $mode == "execute" || $mode == "exe" || $mode == "e" ]]; then
    echo -e "running the following command:\n\t$ podman run -it --rm --name squid-game squid-game -c \"$@\"\n"
    podman run -it --rm --name squid-game squid-game -c "$@"

elif [[ $mode == "compile" || $mode == "com" || $mode == "c" ]]; then
    echo -e "building proto files\n"
    protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative --experimental_allow_proto3_optional $(find ./ -name "*.proto")

elif [[ $mode == "remove" || $mode == "rm" || $mode == "r" ]]; then
    echo -e "cleaning\n"
    rm -vf squid-bin
    rm -vf logs/*.log

elif [[ $mode == "test" || $mode == "t" ]]; then
    echo -e "executing entities in tmux sessions: pool, datanode1, datanode2, datanode3, namenode, leader\n"
    tmux new-session -d -s pool './squid-bin pool'
    sleep 1
    tmux new-session -d -s datanode1 './squid-bin datanode 1'
    sleep 1
    tmux new-session -d -s datanode2 './squid-bin datanode 2'
    sleep 1
    tmux new-session -d -s datanode3 './squid-bin datanode 3'
    sleep 1
    tmux new-session -d -s namenode './squid-bin namenode'
    sleep 1
    tmux new-session -d -s leader './squid-bin leader'
    sleep 1
    # tmux new-session -d -s player './squid-bin player 0'

elif [[ $mode == "kill" || $mode == "k" ]]; then
    echo -e "killing all tmux sessions & processes"
    tmux kill-server
    pkill squid

else
    echo -e 'usage: ./squid-cli b[uild]              # build binary with go'
    echo -e '  or:  ./squid-cli d[ocker]             # build image'
    echo -e '  or:  ./squid-cli p[ull]               # copy the binary'
    echo -e '  or:  ./squid-cli e[xecute] [ARGS...]  # run commands in shell'
    echo -e '  or:  ./squid-cli c[ompile]            # build proto files'
    echo -e '  or:  ./squid-cli t[test]              # run tmux sessions for each entity'
    echo -e '  or:  ./squid-cli k[ill]               # kill tmux server'
    echo -e '  or:  ./squid-cli r[emove]             # remove binary and logs'
fi
